# Copyright (c) Meta Platforms, Inc. and affiliates.
#
# License found in the LICENSE file in the root directory
# of this source tree.

## This file contains the HAProxy configuration for the WhatsApp proxy host use-case

# Documentation
# https://cbonte.github.io/haproxy-dconv/2.5/configuration.html#maxconn

global
  # Default buffer size is 16kB and we need 2 buffers/conn.
  # For WA we want a lower memory footprint, so we lower it to 4kB.
  tune.bufsize 4096

  # We limit the connection count to 27.5K connections concurrently such that
  # to fail healthchecks we'd have to actually have health problems rather than just reject connections
  #
  # Upon the 27501'th connection on a proxy port, it'll be REJECTED in favor of reconnecting to a different proxy host
  # which will mean the existing connection will be serviced without the host being recycled
  maxconn 27500

  # Adds some randomness on the interval delay between two consecutive health checks
  spread-checks 5

  # # Log to local rsyslogd (levels: emerg alert crit err warning notice info debug)
  # log 127.0.0.1 local0 notice
  ssl-server-verify none

  # ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  # ssl-default-bind-options prefer-client-ciphers no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
  # ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  # ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets


defaults
  mode tcp
  # we don't retain this information for long since connections are load balanced they'll end up on a new host
  timeout client-fin 1s
  timeout server-fin 1s
  timeout connect 5s
  timeout client 200s
  timeout server 200s
  # log global
  # option tcplog
  default-server inter 10s fastinter 1s downinter 3s error-limit 50

listen stats
  bind :::8199
  mode http
  http-request use-service prometheus-exporter if { path /metrics }
  stats uri /

# These expect direct connections from clients or through NLB balanced
# connections
frontend haproxy_v4_http
  maxconn 27495
  #PUBLIC_IP

  bind ipv4@*:80
  bind ipv4@*:8080 accept-proxy

  default_backend wa_http

frontend haproxy_v4_https
  maxconn 27495
  #PUBLIC_IP

  bind ipv4@*:443 ssl crt /etc/haproxy/ssl/proxy.whatsapp.net.pem
  bind ipv4@*:8443 ssl crt /etc/haproxy/ssl/proxy.whatsapp.net.pem accept-proxy

  default_backend wa

frontend haproxy_v4_xmpp
  maxconn 27495
  #PUBLIC_IP

  bind ipv4@*:5222
  bind ipv4@*:8222 accept-proxy

  default_backend wa

frontend haproxy_v4_whatsapp_net
  maxconn 27495
  #PUBLIC_IP

  bind ipv4@*:587
  bind ipv4@*:7777

  default_backend wa_whatsapp_net

backend wa_whatsapp_net
  default-server check inter 60000 observe layer4
  server whatsapp_net_443 whatsapp.net:443

backend wa
  default-server check inter 60000 observe layer4 send-proxy
  server g_whatsapp_net_5222 g.whatsapp.net:5222

backend wa_http
  default-server check inter 60000 observe layer4 send-proxy
  server g_whatsapp_net_80 g.whatsapp.net:80
